}
df <- full_data %>%
subset(Act == act)
# Loop over rows in data frame
for (i in 1:nrow(df)) {
# Check if 'doctor' is present in occupation column for this row
if (grepl(moods_names[mood, 1], df[i, "Mood"])) {
# If it is, add this row to the list of matching rows
el[i] <- df[i, "Track.Name"]
}
}
el <- remove_empty_lists(el)
el <- paste(el)
el <- str_remove(el, "\\\\")
return(el)
}
test <- pull_by_act("Lucien_act_1", 1)
View(master_mood)
View(mood_lists)
View(moods)
test <- pull_by_act("Lucien_act_1", which(moods[[col_name]] == value))
test <- pull_by_act("Lucien_act_1", paste(which(moods[[col_name]] == value)))
test <- pull_by_act("Lucien_act_1", which(moods[[Mood]] == "Trippy"))
test <- pull_by_act("Lucien_act_1", which(moods[[Mood]] == "Trippy"))
test <- which(moods[[Mood]] == "Trippy")
test <- pull_by_act("Lucien_act_1", which(moods[["Mood"]] == "Trippy"))
combined_moods <- combined_moods %>%
mutate(songs = NA)
combined_moods$songs[1] <- pull_by_act("Lucien_act_1", which(moods[["Mood"]] == "Trippy"))
test <- pull_by_act("Lucien_act_1", which(moods[["Mood"]] == "Trippy"))
combined_moods$songs[1] <- paste(pull_by_act("Lucien_act_1", which(moods[["Mood"]] == "Trippy")), collapse = ", ")
combined_moods$songs[2] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == "Death")), collapse = ", ")
combined_moods$songs[3] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == "Control-loss")), collapse = ", ")
combined_moods$songs[4] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == "Resisting")), collapse = ", ")
combined_moods$songs[5] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == "Love")), collapse = ", ")
combined_moods$songs[6] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == "Pensive")), collapse = ", ")
for (i in 1:40){
combined_moods$songs[i] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == combined_moods$Mood[i])),
collapse = ", ")
}
combined_moods$songs[i-1] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == combined_moods$Mood[i])),
collapse = ", ")
for (i in 1:40){
combined_moods$songs[i-1] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == combined_moods$Mood[i])),
collapse = ", ")
}
for (i in 1:40){
combined_moods$songs[i] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == combined_moods$Mood[i-1])),
collapse = ", ")
}
for (i in 1:40){
combined_moods$songs[i] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == combined_moods$Mood[i+1])),
collapse = ", ")
}
for (i in 1:49) {
df_name <- paste("mood_", i, sep = "")  # create the data frame name using paste
df <- get(df_name)  # get the data frame using get
combined_moods <- rbind(combined_moods, df)  # combine the data frame using rbind
}
combined_moods <- combined_moods %>%
rename("grouped_variable" = "Act") %>%
left_join(act_cont, by = "grouped_variable")
}
combined_moods <- data.frame()  # create an empty data frame to hold the combined data
for (i in 1:49) {
df_name <- paste("mood_", i, sep = "")  # create the data frame name using paste
df <- get(df_name)  # get the data frame using get
combined_moods <- rbind(combined_moods, df)  # combine the data frame using rbind
}
combined_moods <- combined_moods %>%
rename("grouped_variable" = "Act") %>%
left_join(act_cont, by = "grouped_variable")
nums <- data_frame(c(1:202)) %>%
rename("num" = "c(1:202)")
combined_moods <- combined_moods %>%
bind_cols(nums)
combined_moods <- combined_moods %>%
arrange(match(grouped_variable, unique(full_data$Act)))
combined_moods <- combined_moods %>%
mutate(songs = NA)
test_df <- combined_moods
for (i in 1:40){
test_df$songs[i] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df$Mood[i+1])),
collapse = ", ")
}
View(test_df)
for (i in 1:40){
test_df$songs[i] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df$Mood[i])),
collapse = ", ")
}
test_df$songs[1] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df$Mood[1])),
collapse = ", ")
View(test_df)
test_df <- combined_moods
for (i in 1:40){
test_df$songs[i] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df[i, 3])),
collapse = ", ")
}
test_df <- combined_moods
for (i in 1:40){
test_df$songs[i] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df[i, 3])),
collapse = ", ")
}
for (i in 1:40){
test_df$songs[i] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df$Mood$Mood[i])),
collapse = ", ")
}
62-41
for (i in 1:21){
test_df$songs[i + 40] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df$Mood$Mood[i + 40])),
collapse = ", ")
}
for (i in 1:21){
test_df$songs[i + 40] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df$Mood$Mood[i + 40])),
collapse = ", ")
}
test <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df$Mood$Mood[1 + 40])),
collapse = ", ")
test <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df$Mood$Mood[1 + 40])),
collapse = ", ") %>%
print()
test <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == "Peace")),
collapse = ", ") %>%
print()
for (i in 1:21){
test_df$songs[i + 40] <- paste(
pull_by_act("Molly_act_1", which(moods[["Mood"]] == test_df$Mood$Mood[i + 40])),
collapse = ", ")
}
63 - 79
test_df$songs[i + 62] <- paste(
pull_by_act("Molly_act_2", which(moods[["Mood"]] == test_df$Mood$Mood[i + 62])),
collapse = ", ")
for (i in 1:16){
test_df$songs[i + 62] <- paste(
pull_by_act("Molly_act_2", which(moods[["Mood"]] == test_df$Mood$Mood[i + 62])),
collapse = ", ")
}
for (i in 1:22){
test_df$songs[i + 40] <- paste(
pull_by_act("Molly_act_1", which(moods[["Mood"]] == test_df$Mood$Mood[i + 40])),
collapse = ", ")
}
for (i in 1:17){
test_df$songs[i + 62] <- paste(
pull_by_act("Molly_act_2", which(moods[["Mood"]] == test_df$Mood$Mood[i + 62])),
collapse = ", ")
}
for (i in 1:17){
test_df$songs[i + 62] <- paste(
pull_by_act("Molly_act_2", which(moods[["Mood"]] == test_df$Mood$Mood[i + 62])),
collapse = ", ")
}
count(test_df, "Molly_act_2")
which(test_df[["grouped_variable"]] == "Molly_act_2")
63 - 79 +1
79 - 63 +1
count(test_df, "Molly_act_3")
which(test_df[["grouped_variable"]] == "Molly_act_3")
102 - 80 + 1
test_df$songs[i + 79] <- paste(
pull_by_act("Molly_act_2", which(moods[["Mood"]] == test_df$Mood$Mood[i + 79])),
collapse = ", ")
count(test_df, "Lucien_act_2")
which(test_df[["grouped_variable"]] == "Lucien_act_2")
test_df$songs[i + 102] <- paste(
pull_by_act("Molly_act_2", which(moods[["Mood"]] == test_df$Mood$Mood[i + 102])),
collapse = ", ")
for (i in 1:40){
test_df$songs[i] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df$Mood$Mood[i])),
collapse = ", ")
}
for (i in 1:22){
test_df$songs[i + 40] <- paste(
pull_by_act("Molly_act_1", which(moods[["Mood"]] == test_df$Mood$Mood[i + 40])),
collapse = ", ")
}
for (i in 1:17){
test_df$songs[i + 62] <- paste(
pull_by_act("Molly_act_2", which(moods[["Mood"]] == test_df$Mood$Mood[i + 62])),
collapse = ", ")
}
for (i in 1:23){
test_df$songs[i + 79] <- paste(
pull_by_act("Molly_act_3", which(moods[["Mood"]] == test_df$Mood$Mood[i + 79])),
collapse = ", ")
}
for (i in 1:39){
test_df$songs[i + 102] <- paste(
pull_by_act("Lucien_act_2", which(moods[["Mood"]] == test_df$Mood$Mood[i + 102])),
collapse = ", ")
}
count(test_df, "Lucien_act_3")
which(test_df[["grouped_variable"]] == "Lucien_act_3")
test_df$songs[i + 141] <- paste(
pull_by_act("Lucien_act_3", which(moods[["Mood"]] == test_df$Mood$Mood[i + 141])),
collapse = ", ")
which(test_df[["grouped_variable"]] == "Kingsley_epiloge")
test_df$songs[i + 176] <- paste(
pull_by_act("Kingsley_epiloge", which(moods[["Mood"]] == test_df$Mood$Mood[i + 176])),
collapse = ", ")
test_df <- combined_moods
for (i in 1:40){
test_df$songs[i] <- paste(
pull_by_act("Lucien_act_1", which(moods[["Mood"]] == test_df$Mood$Mood[i])),
collapse = ", ")
}
for (i in 1:22){
test_df$songs[i + 40] <- paste(
pull_by_act("Molly_act_1", which(moods[["Mood"]] == test_df$Mood$Mood[i + 40])),
collapse = ", ")
}
for (i in 1:17){
test_df$songs[i + 62] <- paste(
pull_by_act("Molly_act_2", which(moods[["Mood"]] == test_df$Mood$Mood[i + 62])),
collapse = ", ")
}
for (i in 1:23){
test_df$songs[i + 79] <- paste(
pull_by_act("Molly_act_3", which(moods[["Mood"]] == test_df$Mood$Mood[i + 79])),
collapse = ", ")
}
for (i in 1:39){
test_df$songs[i + 102] <- paste(
pull_by_act("Lucien_act_2", which(moods[["Mood"]] == test_df$Mood$Mood[i + 102])),
collapse = ", ")
}
for (i in 1:35){
test_df$songs[i + 141] <- paste(
pull_by_act("Lucien_act_3", which(moods[["Mood"]] == test_df$Mood$Mood[i + 141])),
collapse = ", ")
}
for (i in 1:26){
test_df$songs[i + 176] <- paste(
pull_by_act("Kingsley_epiloge", which(moods[["Mood"]] == test_df$Mood$Mood[i + 176])),
collapse = ", ")
}
combined_moods <- test_df
# filter(grouped_variable == "Lucien_act_1") %>%
moods_plot <- plot_ly(combined_moods, x = ~grouped_variable, split = ~Mood$Mood) %>%
add_trace(y = ~combined_moods$mean_duration_prop,
type = 'scatter',
mode = "lines+markers",
hovertext = paste(combined_moods$songs)) %>%
layout(xaxis = list(categoryorder = "array",
categoryarray = act_list$Act,
title = "mood"),
yaxis = list(title = "prop"))
moods_plot
source("C:/Users/nnotc/Documents/misc_projects/Playlist/noises_in_a_swound.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
source("~/misc_projects/Playlist/noises_in_a_swound.R")
source("C:/Users/nnotc/Documents/misc_projects/Playlist/noises_in_a_swound.R", echo=TRUE)
source("C:/Users/nnotc/Documents/misc_projects/Playlist/noises_in_a_swound.R", echo=TRUE)
moods_plot
moods_plot
source("C:/Users/nnotc/Documents/misc_projects/Playlist/noises_in_a_swound.R", echo=TRUE)
moods_plot
source("C:/Users/nnotc/Documents/misc_projects/Playlist/noises_in_a_swound.R", echo=TRUE)
source("C:/Users/nnotc/Documents/misc_projects/Playlist/noises_in_a_swound.R", echo=TRUE)
source("C:/Users/nnotc/Documents/misc_projects/Playlist/noises_in_a_swound.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
library("tidyr")
library("dplyr")
library("ggplot2")
library("DescTools")
library("GGally")
library("stringr")
library("stats")
accuracy <- read.csv("~/331/group_project/Accuracy.csv") %>%
select(Results, Type) %>%
group_by(Type) %>%
summarise(Mean = mean(Results))
accuracy_bars <- ggplot(accuracy, aes(Type, Mean)) +
geom_col() +
geom_errorbar(aes(ymin = Mean-MeanSE(Mean), ymax = Mean+MeanSE(Mean)),
width = .2)
rt <- read.csv("~/331/group_project/Rt.csv") %>%
select(RT, Condition) %>%
group_by(Condition) %>%
mutate(row = row_number())
rt$Condition <- str_replace(rt$Condition, "Cong", "Congruent")
rt$Condition <- str_replace(rt$Condition, "Incong", "Incongruent")
rt_cuttoff <- rt_summary %>%
rename(RT = Mean)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
View(rt_summary)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
View(rt_summary)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
View(list_by_condition)
source("~/331/group_project/descriptives.R", echo=TRUE)
cong_incong
rt_box
rt_box_no_out
View(list_by_condition)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
View(cong_neutral)
View(list_by_condition_no_out)
rt_box
source("~/331/group_project/descriptives.R", echo=TRUE)
rt_box
source("~/331/group_project/descriptives.R", echo=TRUE)
rt_box
source("~/331/group_project/descriptives.R", echo=TRUE)
source("~/331/group_project/descriptives.R", echo=TRUE)
rt_box
source("~/331/group_project/descriptives.R", echo=TRUE)
rt_box
source("~/331/group_project/descriptives.R", echo=TRUE)
rt_box
cong_incong_rt <- print(t.test(list_by_condition$Congruent, list_by_condition$Incongruent, conf.level = .95,
paired = T, var.equal = T))
cong_neutral_rt <- print(t.test(list_by_condition$Congruent, list_by_condition$Neutral, conf.level = .95,
paired = T, var.equal = T))
cong_incong
cong_incong_rt
incong_neutral_rt <- print(t.test(list_by_condition$Incongruent, list_by_condition$Neutral, conf.level = .95,
paired = T, var.equal = T))
cong_incong_rt <- print(t.test(list_by_condition$Congruent, list_by_condition$Incongruent, conf.level = .95,
paired = T, var.equal = T))
incong_neutral_rt <- print(t.test(list_by_condition$Incongruent, list_by_condition$Neutral, conf.level = .95,
paired = T, var.equal = T))
cong_neutral_rt <- print(t.test(list_by_condition$Congruent, list_by_condition$Neutral, conf.level = .95,
paired = T, var.equal = T))
View(accuracy)
View(accuracy_bars)
View(accuracy)
View(accuracy)
cong_incong_ac <-  print(t.test(accuracy[["Cong"]], accuracy[["Incong"]], conf.level = .95,
paired = T, var.equal = T))
cong_incong_ac <-  print(t.test(accuracy$Type[1], accuracy$Type[2], conf.level = .95,
paired = T, var.equal = T))
cong_incong_ac <-  print(t.test(accuracy$Mean[1], accuracy$Mean[2], conf.level = .95,
paired = T, var.equal = T))
View(list_by_condition_no_out)
View(list_by_condition)
accuracy <- read.csv("~/331/group_project/Accuracy.csv") %>%
select(Results, Type) %>%
group_by(Type) %>%
mutate(row = row_number())
accuracy_list <- pivot_wider(accuracy, names_from = "Type", values_from = "Results")
cong_incong_ac <-  print(t.test(accuracy_list$Cong, accuracy_list$Incong, conf.level = .95,
paired = T, var.equal = T))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
setwd("C:/Users/nnotc/Documents/Blaarkop/STAG2023")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
true
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#library(tidyverse)
library(dplyr)
library(broom)
pwd
setwd("C:/Users/nnotc/Documents")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
install.packages("rlang")
#library(tidyverse)
library(dplyr)
library(broom)
install.packages("rlang")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
install.packages("rlang")
#library(tidyverse)
library(dplyr)
library(broom)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")#
search()
detach("package:base", unload = TRUE)
detach("package:datasets", unload = TRUE)
detach("package:graphics", unload = TRUE)
detach("package:grDevices", unload = TRUE)
detach("package:stats", unload = TRUE)
detach("package:utils", unload = TRUE)
detach("package:methods", unload = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#install.packages("rlang")
#library(tidyverse)
library(dplyr)
library(broom)
#install.packages("rlang")
#library(tidyverse)
install.packages("vctrs")
library(base, lib.loc = "C:/Program Files/R/R-4.2.1/library")
library(utils, lib.loc = "C:/Program Files/R/R-4.2.1/library")
library(stats, lib.loc = "C:/Program Files/R/R-4.2.1/library")
detach("package:stats", unload = TRUE)
library(vctrs)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#install.packages("rlang")
#library(tidyverse)
#install.packages("vctrs")
library(dplyr)
library(broom)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#install.packages("rlang")
#library(tidyverse)
#install.packages("vctrs")
# library(dplyr)
# library(broom)
# library(reshape2)
# library(glmnet)
# library(readr)
# Graphics
library(ggplot2)
#install.packages("rlang")
#library(tidyverse)
#install.packages("vctrs")
# library(dplyr)
# library(broom)
# library(reshape2)
# library(glmnet)
# library(readr)
install.packages("rlang")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#install.packages("rlang")
#library(tidyverse)
#install.packages("vctrs")
# library(dplyr)
# library(broom)
# library(reshape2)
# library(glmnet)
# library(readr)
#install.packages("rlang")
# Graphics
library(ggplot2)
library(devtools)
devtools::install_github("VanRijnLab/SlimStampeRData",
build_vignettes = TRUE,
dependencies = TRUE,
force = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
setwd("C:/Users/nnotc/Documents/stag_2023/ems_stuff")
source("~/stag_2023/ems_stuff/ems_analysis_attempt.R", echo=TRUE)
library("tidyr")
install.packages(c("cli", "dplyr", "rlang", "xfun"))
source("~/stag_2023/ems_stuff/ems_analysis_attempt.R", echo=TRUE)
.libPaths()
install.packages("rlang")
install.packages("rlang")
source("~/stag_2023/ems_stuff/ems_analysis_attempt.R", echo=TRUE)
source("~/stag_2023/ems_stuff/ems_analysis_attempt.R", echo=TRUE)
install.packages("rlang")
install.packages("rlang")
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
source("~/stag_2023/ems_stuff/ems_analysis_attempt.R", echo=TRUE)
source("~/stag_2023/ems_stuff/ems_analysis_attempt.R", echo=TRUE)
